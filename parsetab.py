
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVleftPOWERrightSIGNCHARACTER COMMA COS DERIVATIVE DIV EQUALS FLOAT FROM GOES IF INFINITY INT INTEGRAL LIMIT LPAR MINUS MULT OF PLUS POWER PRINTLIST PRODUCT RPAR SIN SUMMATION TAN TO VAR WHEN Xstatement : PRINTLIST statement : VAR EQUALS expression\n                 | VAR EQUALS equation\n                 | VAR EQUALS resultstatement : expression\n                 | equation\n                 | resultexpression : VARexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULT expression\n                  | expression DIV expression\n                  | expression POWER expressionexpression : FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER PLUS FLOAT\n                  | FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER MINUS FLOAT\n                  | FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER PLUS FLOAT\n                  | FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER MINUS FLOATexpression : LPAR FLOAT COMMA FLOAT RPARexpression : LPAR expression RPARexpression : MINUS expression %prec SIGNexpression : termterm : FLOAT\n            | INTresult : FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER PLUS FLOAT\n                  | FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER MINUS FLOAT\n                  | FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER PLUS FLOAT\n                  | FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER MINUS FLOATresult : INTEGRAL OF expression\n                   | INTEGRAL OF equationresult : INTEGRAL FROM expression TO expression OF expression\n              | INTEGRAL FROM expression TO expression OF equation\n              | INTEGRAL FROM expression TO INFINITY OF expression\n              | INTEGRAL FROM expression TO INFINITY OF equationresult : DERIVATIVE OF expression\n              | DERIVATIVE OF equationresult : LIMIT WHEN X GOES expression OF expression\n              | LIMIT WHEN X GOES INFINITY OF expression\n              | LIMIT WHEN X GOES expression OF equation\n              | LIMIT WHEN X GOES INFINITY OF equationresult : SUMMATION FROM expression TO expression OF expression\n              | SUMMATION FROM expression TO expression OF equationresult : INTresult : LPAR FLOAT COMMA FLOAT RPARresult : FLOATresult : FLOAT FLOATresult : FLOAT FLOAT FLOATresult : FLOAT FLOAT FLOAT FLOATresult : PRODUCT FROM expression TO expression OF expression\n              | PRODUCT FROM expression TO expression OF equationequation : equation PLUS equation\n                  | equation MINUS equation\n                  | equation MULT equation\n                  | equation DIV equation\n                  | equation POWER equation\n                  | equation PLUS expression\n                  | equation MINUS expression\n                  | equation MULT expression\n                  | equation DIV expression\n                  | equation POWER expression\n                  | expression PLUS equation\n                  | expression MINUS equation\n                  | expression MULT equation\n                  | expression DIV equation\n                  | expression POWER equationequation : Xequation : SIN LPAR expression RPAR\n                | SIN LPAR equation RPAR\n                | COS LPAR expression RPAR\n                | COS LPAR equation RPAR\n                | TAN LPAR expression RPAR\n                | TAN LPAR equation RPARequation : LPAR equation RPARequation : MINUS equation %prec SIGN'
    
_lr_action_items = {'PRINTLIST':([0,],[2,]),'VAR':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,47,48,50,51,67,68,93,94,100,101,102,103,104,118,119,120,121,122,123,126,127,128,155,156,157,158,159,160,],[3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FLOAT':([0,7,8,10,21,22,23,24,25,26,27,28,29,30,31,37,38,43,44,45,46,47,48,50,51,67,68,79,81,93,94,100,101,102,103,104,108,118,119,120,121,122,123,126,127,128,136,137,150,151,155,156,157,158,159,160,179,180,181,182,183,184,185,186,],[8,35,38,40,8,35,35,35,35,35,35,35,35,35,35,78,79,35,35,35,35,35,35,35,35,35,78,109,111,35,78,35,35,35,35,35,135,35,35,35,35,35,35,35,35,35,153,154,161,162,35,35,35,35,35,35,187,188,189,190,191,192,193,194,]),'LPAR':([0,7,10,13,14,15,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,47,48,50,51,67,68,93,94,100,101,102,103,104,118,119,120,121,122,123,126,127,128,155,156,157,158,159,160,],[10,37,37,43,44,45,10,37,37,37,37,37,68,68,68,68,68,37,37,37,37,37,94,37,94,94,68,68,94,94,68,68,68,68,68,94,94,94,94,94,94,94,94,94,37,37,37,37,37,37,]),'MINUS':([0,3,4,5,7,8,9,10,11,12,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,141,142,143,144,145,146,148,149,152,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,187,188,189,190,191,192,193,194,],[7,-8,23,28,7,-22,-23,7,-21,-65,7,7,7,7,7,7,67,67,67,67,67,-20,-73,-8,-22,-23,7,-22,23,28,7,7,7,7,93,7,93,93,23,28,-9,-60,-10,-61,-11,-62,-12,-63,-13,-64,-50,-55,67,67,-51,-56,-52,-57,-53,-58,-54,-59,-22,-19,-72,23,28,23,28,23,28,23,28,120,93,93,23,28,120,120,67,67,67,67,67,-20,101,137,-66,-67,-68,-69,-70,-71,93,93,93,93,93,93,-20,120,93,93,93,-9,-10,-11,-12,-13,151,-18,120,-9,-10,-11,-12,-13,120,120,120,-18,7,7,7,7,7,7,180,181,23,28,23,28,23,28,23,28,23,28,23,28,184,185,-14,-15,-17,-16,-14,-15,-17,-16,]),'X':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,48,49,67,68,100,101,102,103,104,155,156,157,158,159,160,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,97,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SIN':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,48,67,68,100,101,102,103,104,155,156,157,158,159,160,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'COS':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,48,67,68,100,101,102,103,104,155,156,157,158,159,160,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'TAN':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,48,67,68,100,101,102,103,104,155,156,157,158,159,160,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'INTEGRAL':([0,21,],[16,16,]),'DERIVATIVE':([0,21,],[17,17,]),'LIMIT':([0,21,],[18,18,]),'SUMMATION':([0,21,],[19,19,]),'INT':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,47,48,50,51,67,68,80,93,94,100,101,102,103,104,107,118,119,120,121,122,123,126,127,128,155,156,157,158,159,160,],[9,36,36,9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,110,36,36,36,36,36,36,36,134,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PRODUCT':([0,21,],[20,20,]),'$end':([1,2,3,4,5,6,8,9,11,12,32,33,34,35,36,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,79,82,83,90,91,95,96,105,109,112,113,114,115,116,117,129,130,131,132,133,138,152,165,166,167,168,169,170,171,172,173,174,175,176,187,188,189,190,191,192,193,194,],[0,-1,-8,-5,-6,-7,-22,-23,-21,-65,-20,-73,-8,-22,-23,-45,-2,-3,-4,-9,-60,-10,-61,-11,-62,-12,-63,-13,-64,-50,-55,-51,-56,-52,-57,-53,-58,-54,-59,-46,-19,-72,-28,-29,-34,-35,-20,-47,-66,-67,-68,-69,-70,-71,-9,-10,-11,-12,-13,-18,-18,-30,-31,-32,-33,-36,-38,-37,-39,-40,-41,-48,-49,-14,-15,-17,-16,-14,-15,-17,-16,]),'EQUALS':([3,],[21,]),'PLUS':([3,4,5,8,9,11,12,32,33,34,35,36,40,41,42,52,53,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,90,91,92,95,96,98,99,105,106,110,112,113,114,115,116,117,124,125,129,130,131,132,133,134,138,139,141,142,143,144,145,146,148,149,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,187,188,189,190,191,192,193,194,],[-8,22,27,-22,-23,-21,-65,-20,-73,-8,-22,-23,-22,22,27,22,27,-9,-60,-10,-61,-11,-62,-12,-63,-13,-64,-50,-55,-51,-56,-52,-57,-53,-58,-54,-59,-22,-19,-72,22,27,22,27,22,27,22,27,119,22,27,119,119,-20,100,136,-66,-67,-68,-69,-70,-71,-20,119,-9,-10,-11,-12,-13,150,-18,119,-9,-10,-11,-12,-13,119,119,119,-18,179,182,22,27,22,27,22,27,22,27,22,27,22,27,183,186,-14,-15,-17,-16,-14,-15,-17,-16,]),'MULT':([3,4,5,8,9,11,12,32,33,34,35,36,40,41,42,52,53,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,90,91,92,95,96,98,99,105,106,112,113,114,115,116,117,124,125,129,130,131,132,133,138,139,141,142,143,144,145,146,148,149,152,165,166,167,168,169,170,171,172,173,174,175,176,187,188,189,190,191,192,193,194,],[-8,24,29,-22,-23,-21,-65,-20,-73,-8,-22,-23,-22,24,29,24,29,24,29,24,29,-11,-62,-12,-63,-13,-64,29,102,29,102,-52,-57,-53,-58,-54,-59,-22,-19,-72,24,29,24,29,24,29,24,29,121,24,29,121,121,-20,102,-66,-67,-68,-69,-70,-71,-20,121,102,102,-11,-12,-13,-18,121,121,121,-11,-12,-13,121,121,121,-18,24,29,24,29,24,29,24,29,24,29,24,29,-14,-15,-17,-16,-14,-15,-17,-16,]),'DIV':([3,4,5,8,9,11,12,32,33,34,35,36,40,41,42,52,53,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,90,91,92,95,96,98,99,105,106,112,113,114,115,116,117,124,125,129,130,131,132,133,138,139,141,142,143,144,145,146,148,149,152,165,166,167,168,169,170,171,172,173,174,175,176,187,188,189,190,191,192,193,194,],[-8,25,30,-22,-23,-21,-65,-20,-73,-8,-22,-23,-22,25,30,25,30,25,30,25,30,-11,-62,-12,-63,-13,-64,30,103,30,103,-52,-57,-53,-58,-54,-59,-22,-19,-72,25,30,25,30,25,30,25,30,122,25,30,122,122,-20,103,-66,-67,-68,-69,-70,-71,-20,122,103,103,-11,-12,-13,-18,122,122,122,-11,-12,-13,122,122,122,-18,25,30,25,30,25,30,25,30,25,30,25,30,-14,-15,-17,-16,-14,-15,-17,-16,]),'POWER':([3,4,5,8,9,11,12,32,33,34,35,36,39,40,41,42,52,53,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,82,83,84,85,86,87,88,89,90,91,92,95,96,98,99,105,106,112,113,114,115,116,117,124,125,129,130,131,132,133,138,139,141,142,143,144,145,146,148,149,152,165,166,167,168,169,170,171,172,173,174,175,176,187,188,189,190,191,192,193,194,],[-8,26,31,-22,-23,-21,-65,-20,-73,-8,-22,-23,80,-22,26,31,26,31,26,31,26,31,26,31,26,31,-13,-64,31,104,31,104,31,104,31,104,-54,-59,107,-22,-19,-72,26,31,26,31,26,31,26,31,123,26,31,123,123,-20,104,-66,-67,-68,-69,-70,-71,-20,123,104,104,104,104,-13,-18,123,123,123,123,123,-13,123,123,123,-18,26,31,26,31,26,31,26,31,26,31,26,31,-14,-15,-17,-16,-14,-15,-17,-16,]),'CHARACTER':([8,35,40,78,153,154,161,162,],[39,77,77,77,163,164,177,178,]),'RPAR':([11,12,32,33,34,35,36,40,41,42,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,105,106,111,112,113,114,115,116,117,124,125,129,130,131,132,133,135,141,142,143,144,145,152,191,192,193,194,],[-21,-65,-20,-73,-8,-22,-23,-22,82,83,-9,-60,-10,-61,-11,-62,-12,-63,-13,-64,-50,-55,-51,-56,-52,-57,-53,-58,-54,-59,-22,-19,-72,112,113,114,115,116,117,-20,82,138,-66,-67,-68,-69,-70,-71,-20,82,-9,-10,-11,-12,-13,152,-9,-10,-11,-12,-13,-18,-14,-15,-17,-16,]),'TO':([11,34,35,36,82,92,98,99,124,141,142,143,144,145,152,191,192,193,194,],[-21,-8,-22,-23,-19,118,127,128,-20,-9,-10,-11,-12,-13,-18,-14,-15,-17,-16,]),'OF':([11,16,17,34,35,36,82,124,139,140,141,142,143,144,145,146,147,148,149,152,191,192,193,194,],[-21,46,48,-8,-22,-23,-19,-20,155,156,-9,-10,-11,-12,-13,157,158,159,160,-18,-14,-15,-17,-16,]),'FROM':([16,19,20,],[47,50,51,]),'WHEN':([18,],[49,]),'COMMA':([40,78,],[81,108,]),'GOES':([97,],[126,]),'INFINITY':([118,126,],[140,147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,47,48,50,51,67,68,93,94,100,101,102,103,104,118,119,120,121,122,123,126,127,128,155,156,157,158,159,160,],[4,32,41,52,55,57,59,61,63,66,70,72,74,76,41,84,86,88,90,92,95,98,99,105,106,124,125,129,130,131,132,133,139,141,142,143,144,145,146,148,149,165,167,169,171,173,175,]),'equation':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,48,67,68,100,101,102,103,104,155,156,157,158,159,160,],[5,33,42,53,56,58,60,62,64,65,69,71,73,75,42,85,87,89,91,96,33,42,56,58,60,62,64,166,168,170,172,174,176,]),'result':([0,21,],[6,54,]),'term':([0,7,10,21,22,23,24,25,26,27,28,29,30,31,37,43,44,45,46,47,48,50,51,67,68,93,94,100,101,102,103,104,118,119,120,121,122,123,126,127,128,155,156,157,158,159,160,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINTLIST','statement',1,'p_list','sphinx_lex_par.py',124),
  ('statement -> VAR EQUALS expression','statement',3,'p_assign_state','sphinx_lex_par.py',134),
  ('statement -> VAR EQUALS equation','statement',3,'p_assign_state','sphinx_lex_par.py',135),
  ('statement -> VAR EQUALS result','statement',3,'p_assign_state','sphinx_lex_par.py',136),
  ('statement -> expression','statement',1,'p_expr_statement','sphinx_lex_par.py',145),
  ('statement -> equation','statement',1,'p_expr_statement','sphinx_lex_par.py',146),
  ('statement -> result','statement',1,'p_expr_statement','sphinx_lex_par.py',147),
  ('expression -> VAR','expression',1,'p_expression_name','sphinx_lex_par.py',156),
  ('expression -> expression PLUS expression','expression',3,'p_polynomial','sphinx_lex_par.py',165),
  ('expression -> expression MINUS expression','expression',3,'p_polynomial','sphinx_lex_par.py',166),
  ('expression -> expression MULT expression','expression',3,'p_polynomial','sphinx_lex_par.py',167),
  ('expression -> expression DIV expression','expression',3,'p_polynomial','sphinx_lex_par.py',168),
  ('expression -> expression POWER expression','expression',3,'p_polynomial','sphinx_lex_par.py',169),
  ('expression -> FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER PLUS FLOAT','expression',9,'p_quadratic','sphinx_lex_par.py',201),
  ('expression -> FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER MINUS FLOAT','expression',9,'p_quadratic','sphinx_lex_par.py',202),
  ('expression -> FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER PLUS FLOAT','expression',9,'p_quadratic','sphinx_lex_par.py',203),
  ('expression -> FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER MINUS FLOAT','expression',9,'p_quadratic','sphinx_lex_par.py',204),
  ('expression -> LPAR FLOAT COMMA FLOAT RPAR','expression',5,'p_coordinates_exp','sphinx_lex_par.py',219),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_group','sphinx_lex_par.py',228),
  ('expression -> MINUS expression','expression',2,'p_expression_sign','sphinx_lex_par.py',234),
  ('expression -> term','expression',1,'p_expression_basic','sphinx_lex_par.py',240),
  ('term -> FLOAT','term',1,'p_term','sphinx_lex_par.py',248),
  ('term -> INT','term',1,'p_term','sphinx_lex_par.py',249),
  ('result -> FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER PLUS FLOAT','result',9,'p_quadratic_result','sphinx_lex_par.py',254),
  ('result -> FLOAT CHARACTER POWER INT PLUS FLOAT CHARACTER MINUS FLOAT','result',9,'p_quadratic_result','sphinx_lex_par.py',255),
  ('result -> FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER PLUS FLOAT','result',9,'p_quadratic_result','sphinx_lex_par.py',256),
  ('result -> FLOAT CHARACTER POWER INT MINUS FLOAT CHARACTER MINUS FLOAT','result',9,'p_quadratic_result','sphinx_lex_par.py',257),
  ('result -> INTEGRAL OF expression','result',3,'p_result_integral','sphinx_lex_par.py',271),
  ('result -> INTEGRAL OF equation','result',3,'p_result_integral','sphinx_lex_par.py',272),
  ('result -> INTEGRAL FROM expression TO expression OF expression','result',7,'p_result_integral_definida','sphinx_lex_par.py',287),
  ('result -> INTEGRAL FROM expression TO expression OF equation','result',7,'p_result_integral_definida','sphinx_lex_par.py',288),
  ('result -> INTEGRAL FROM expression TO INFINITY OF expression','result',7,'p_result_integral_definida','sphinx_lex_par.py',289),
  ('result -> INTEGRAL FROM expression TO INFINITY OF equation','result',7,'p_result_integral_definida','sphinx_lex_par.py',290),
  ('result -> DERIVATIVE OF expression','result',3,'p_result_derivation','sphinx_lex_par.py',309),
  ('result -> DERIVATIVE OF equation','result',3,'p_result_derivation','sphinx_lex_par.py',310),
  ('result -> LIMIT WHEN X GOES expression OF expression','result',7,'p_result_limit','sphinx_lex_par.py',326),
  ('result -> LIMIT WHEN X GOES INFINITY OF expression','result',7,'p_result_limit','sphinx_lex_par.py',327),
  ('result -> LIMIT WHEN X GOES expression OF equation','result',7,'p_result_limit','sphinx_lex_par.py',328),
  ('result -> LIMIT WHEN X GOES INFINITY OF equation','result',7,'p_result_limit','sphinx_lex_par.py',329),
  ('result -> SUMMATION FROM expression TO expression OF expression','result',7,'p_result_summation','sphinx_lex_par.py',349),
  ('result -> SUMMATION FROM expression TO expression OF equation','result',7,'p_result_summation','sphinx_lex_par.py',350),
  ('result -> INT','result',1,'p_result_factorial','sphinx_lex_par.py',367),
  ('result -> LPAR FLOAT COMMA FLOAT RPAR','result',5,'p_result_PolarToCart','sphinx_lex_par.py',386),
  ('result -> FLOAT','result',1,'p_result_DegToRads','sphinx_lex_par.py',400),
  ('result -> FLOAT FLOAT','result',2,'p_result_magnitude','sphinx_lex_par.py',421),
  ('result -> FLOAT FLOAT FLOAT','result',3,'p_result_MagnitudeOfThree','sphinx_lex_par.py',433),
  ('result -> FLOAT FLOAT FLOAT FLOAT','result',4,'p_result_DistanceBetweenTwo','sphinx_lex_par.py',445),
  ('result -> PRODUCT FROM expression TO expression OF expression','result',7,'p_product_exp','sphinx_lex_par.py',458),
  ('result -> PRODUCT FROM expression TO expression OF equation','result',7,'p_product_exp','sphinx_lex_par.py',459),
  ('equation -> equation PLUS equation','equation',3,'p_equation_additions','sphinx_lex_par.py',477),
  ('equation -> equation MINUS equation','equation',3,'p_equation_additions','sphinx_lex_par.py',478),
  ('equation -> equation MULT equation','equation',3,'p_equation_additions','sphinx_lex_par.py',479),
  ('equation -> equation DIV equation','equation',3,'p_equation_additions','sphinx_lex_par.py',480),
  ('equation -> equation POWER equation','equation',3,'p_equation_additions','sphinx_lex_par.py',481),
  ('equation -> equation PLUS expression','equation',3,'p_equation_additions','sphinx_lex_par.py',482),
  ('equation -> equation MINUS expression','equation',3,'p_equation_additions','sphinx_lex_par.py',483),
  ('equation -> equation MULT expression','equation',3,'p_equation_additions','sphinx_lex_par.py',484),
  ('equation -> equation DIV expression','equation',3,'p_equation_additions','sphinx_lex_par.py',485),
  ('equation -> equation POWER expression','equation',3,'p_equation_additions','sphinx_lex_par.py',486),
  ('equation -> expression PLUS equation','equation',3,'p_equation_additions','sphinx_lex_par.py',487),
  ('equation -> expression MINUS equation','equation',3,'p_equation_additions','sphinx_lex_par.py',488),
  ('equation -> expression MULT equation','equation',3,'p_equation_additions','sphinx_lex_par.py',489),
  ('equation -> expression DIV equation','equation',3,'p_equation_additions','sphinx_lex_par.py',490),
  ('equation -> expression POWER equation','equation',3,'p_equation_additions','sphinx_lex_par.py',491),
  ('equation -> X','equation',1,'p_equation_complex','sphinx_lex_par.py',500),
  ('equation -> SIN LPAR expression RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',506),
  ('equation -> SIN LPAR equation RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',507),
  ('equation -> COS LPAR expression RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',508),
  ('equation -> COS LPAR equation RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',509),
  ('equation -> TAN LPAR expression RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',510),
  ('equation -> TAN LPAR equation RPAR','equation',4,'p_trigonometry','sphinx_lex_par.py',511),
  ('equation -> LPAR equation RPAR','equation',3,'p_equation_group','sphinx_lex_par.py',517),
  ('equation -> MINUS equation','equation',2,'p_expression_negative','sphinx_lex_par.py',524),
]
